//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarFinderSvc.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CarFinderSvcEntities : DbContext
    {
        public CarFinderSvcEntities()
            : base("name=CarFinderSvcEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BodyStyle> BodyStyles { get; set; }
        public virtual DbSet<Car> Cars { get; set; }
        public virtual DbSet<DriveType> DriveTypes { get; set; }
        public virtual DbSet<EngineFuel> EngineFuels { get; set; }
        public virtual DbSet<EnginePosition> EnginePositions { get; set; }
        public virtual DbSet<EngineType> EngineTypes { get; set; }
        public virtual DbSet<Make> Makes { get; set; }
        public virtual DbSet<TransmissionType> TransmissionTypes { get; set; }
    
        public virtual ObjectResult<string> GetCarMakes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCarMakes");
        }
    
        public virtual ObjectResult<string> GetCarMakesByYear(string year)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCarMakesByYear", yearParameter);
        }
    
        public virtual ObjectResult<string> GetCarModel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCarModel");
        }
    
        public virtual ObjectResult<GetCarsByEngineSize_Result> GetCarsByEngineSize(string cyl_cnt)
        {
            var cyl_cntParameter = cyl_cnt != null ?
                new ObjectParameter("cyl_cnt", cyl_cnt) :
                new ObjectParameter("cyl_cnt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsByEngineSize_Result>("GetCarsByEngineSize", cyl_cntParameter);
        }
    
        public virtual ObjectResult<GetCarsByHorsePower_Result> GetCarsByHorsePower(string horsepower)
        {
            var horsepowerParameter = horsepower != null ?
                new ObjectParameter("horsepower", horsepower) :
                new ObjectParameter("horsepower", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsByHorsePower_Result>("GetCarsByHorsePower", horsepowerParameter);
        }
    
        public virtual ObjectResult<GetCarsByWeight_Result> GetCarsByWeight(string kg)
        {
            var kgParameter = kg != null ?
                new ObjectParameter("kg", kg) :
                new ObjectParameter("kg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsByWeight_Result>("GetCarsByWeight", kgParameter);
        }
    
        public virtual ObjectResult<GetCarsByYearMakeModelTrim_Result> GetCarsByYearMakeModelTrim(string year, string make, string model, string trim)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var makeParameter = make != null ?
                new ObjectParameter("make", make) :
                new ObjectParameter("make", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            var trimParameter = trim != null ?
                new ObjectParameter("trim", trim) :
                new ObjectParameter("trim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsByYearMakeModelTrim_Result>("GetCarsByYearMakeModelTrim", yearParameter, makeParameter, modelParameter, trimParameter);
        }
    
        public virtual ObjectResult<GetCarsGreaterThan300HP_Result> GetCarsGreaterThan300HP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsGreaterThan300HP_Result>("GetCarsGreaterThan300HP");
        }
    
        public virtual ObjectResult<GetCarsUnder2000kg_Result> GetCarsUnder2000kg()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsUnder2000kg_Result>("GetCarsUnder2000kg");
        }
    
        public virtual ObjectResult<GetCarsUnder2000kgGreater300HP_Result> GetCarsUnder2000kgGreater300HP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsUnder2000kgGreater300HP_Result>("GetCarsUnder2000kgGreater300HP");
        }
    
        public virtual ObjectResult<string> GetCarTrimLevels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCarTrimLevels");
        }
    
        public virtual ObjectResult<GetMidEngineCars_Result> GetMidEngineCars()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMidEngineCars_Result>("GetMidEngineCars");
        }
    
        public virtual ObjectResult<string> GetModelsByGivenYearMake(string year, string make)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var makeParameter = make != null ?
                new ObjectParameter("make", make) :
                new ObjectParameter("make", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetModelsByGivenYearMake", yearParameter, makeParameter);
        }
    
        public virtual ObjectResult<string> GetModelTrimsByYearMakeModel(string year, string make, string model)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var makeParameter = make != null ?
                new ObjectParameter("make", make) :
                new ObjectParameter("make", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetModelTrimsByYearMakeModel", yearParameter, makeParameter, modelParameter);
        }
    
        public virtual ObjectResult<string> GetModelYears()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetModelYears");
        }
    
        public virtual ObjectResult<GetSUV_Result> GetSUV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSUV_Result>("GetSUV");
        }
    }
}
